USE GroupManagement;
GO

IF OBJECT_ID('Group', 'U') IS NULL
BEGIN
CREATE TABLE [Group] (
	Id bigint NOT NULL,
	Name varchar(50) NOT NULL UNIQUE,
	Course_Id bigint NOT NULL UNIQUE,
	Semester_Id bigint NOT NULL UNIQUE,
	Faculty_Id bigint NOT NULL UNIQUE,
  CONSTRAINT [PK_GROUP] PRIMARY KEY CLUSTERED
  (
  [Id] ASC
  ) WITH (IGNORE_DUP_KEY = OFF)

)
END
GO

ALTER TABLE [Group] WITH CHECK ADD CONSTRAINT [Group_fk0] FOREIGN KEY ([Course_Id]) REFERENCES [Course]([Id])
ON UPDATE CASCADE
GO

ALTER TABLE [Group] CHECK CONSTRAINT [Group_fk0]
GO

ALTER TABLE [Group] WITH CHECK ADD CONSTRAINT [Group_fk1] FOREIGN KEY ([Semester_Id]) REFERENCES [Semester]([Id])
ON UPDATE CASCADE
GO

ALTER TABLE [Group] CHECK CONSTRAINT [Group_fk1]
GO

ALTER TABLE [Group] WITH CHECK ADD CONSTRAINT [Group_fk2] FOREIGN KEY ([Faculty_Id]) REFERENCES [Faculty]([Id])
ON UPDATE CASCADE
GO

ALTER TABLE [Group] CHECK CONSTRAINT [Group_fk2]

USE GroupManagement_Deleted;
GO

IF OBJECT_ID('Group', 'U') IS NULL
BEGIN
CREATE TABLE [Group] (
	Id bigint NOT NULL,
	Name varchar(50) NOT NULL UNIQUE,
	Course_Id bigint NOT NULL UNIQUE,
	Semester_Id bigint NOT NULL UNIQUE,
	Faculty_Id bigint NOT NULL UNIQUE,
	Deleted datetime NOT NULL,
  CONSTRAINT [PK_GROUP] PRIMARY KEY CLUSTERED
  (
  [Id] ASC
  ) WITH (IGNORE_DUP_KEY = OFF)

)
END
GO


ALTER TABLE [Group] WITH CHECK ADD CONSTRAINT [Group_fk0] FOREIGN KEY ([Course_Id]) REFERENCES [Course]([Id])
ON UPDATE CASCADE
GO

ALTER TABLE [Group] CHECK CONSTRAINT [Group_fk0]
GO

ALTER TABLE [Group] WITH CHECK ADD CONSTRAINT [Group_fk1] FOREIGN KEY ([Semester_Id]) REFERENCES [Semester]([Id])
ON UPDATE CASCADE
GO

ALTER TABLE [Group] CHECK CONSTRAINT [Group_fk1]
GO

ALTER TABLE [Group] WITH CHECK ADD CONSTRAINT [Group_fk2] FOREIGN KEY ([Faculty_Id]) REFERENCES [Faculty]([Id])
ON UPDATE CASCADE
GO

ALTER TABLE [Group] CHECK CONSTRAINT [Group_fk2]
